//! `SeaORM` Entity, @generated by sea-orm-codegen 1.0.1

use crate::users::models::User;
use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "users")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub email: String,
    pub name: String,
    pub password: String,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {}

impl ActiveModelBehavior for ActiveModel {}

impl From<Model> for User {
    fn from(val: Model) -> Self {
        User {
            email: val.email,
            name: val.name,
            password: val.password,
        }
    }
}
